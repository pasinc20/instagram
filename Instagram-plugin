<?php
/*
 * Plugin Name: Image Uploader
 * Plugin URI: https://example.com/image-uploader
 * Description: Allows logged in users to upload an image and display it on the front end.
 * Author: Your Name
 * Version: 1.0
 */

function image_uploader_activate() {
  // Create database tables or options here
}
register_activation_hook( __FILE__, 'image_uploader_activate' );

function image_uploader_menu() {
  add_options_page( 'Image Uploader', 'Image Uploader', 'manage_options', 'image-uploader', 'image_uploader_page' );
}
add_action( 'admin_menu', 'image_uploader_menu' );

function image_uploader_page() {
  // Check if the user is logged in and has permission to upload images
  if ( !is_user_logged_in() || !current_user_can( 'upload_files' ) ) {
    wp_die( 'You do not have permission to access this page.' );
  }

  // Check if the form has been submitted
  if ( isset( $_POST['submit'] ) ) {
    // Validate the form data
    $errors = array();
    if ( !isset( $_FILES['image'] ) || empty( $_FILES['image']['tmp_name'] ) ) {
      $errors[] = 'Please select an image to upload.';
    }

    // If there are no errors, handle the image upload
    if ( empty( $errors ) ) {
      $image = media_handle_upload( 'image', 0 );
      if ( is_wp_error( $image ) ) {
        $errors[] = $image->get_error_message();
      } else {
        // Set the description as the post_content of the attachment
        wp_update_post( array(
          'ID' => $image,
          'post_content' => sanitize_text_field( $_POST['description'] ),
        ) );

        $old_images = get_user_meta( get_current_user_id(), 'image', true );
        if ( !is_array( $old_images ) ) {
          $old_images = array();
        }
        array_push( $old_images, $image );
        update_user_meta( get_current_user_id(), 'image', $old_images );
      }
    }
  }
    // Display the form
  ?>
  <div class="wrap">
    <h1>Image Uploader</h1>
    <?php if ( !empty( $errors ) ) : ?>
      <div class="notice notice-error">
        <ul>
          <?php foreach ( $errors as $error ) : ?>
            <li><?php echo $error; ?></li>
          <?php endforeach; ?>
        </ul>
      </div>
    <?php endif; ?>
    <form method="post" enctype="multipart/form-data">
      <p>
        <label for="image">Choose an image:</label><br>
        <input type="file" name="image" id="image">
      </p>
      <p>
        <label for="description">Enter a description for the image:</label><br>
        <input type="text" name="description" id="description">
      </p>
      <p>
        <input type="submit" name="submit" value="Upload Image">
      </p>
    </form>

    <?php
    // Get the current user's image
    $image_ids = get_user_meta( get_current_user_id(), 'image', true );
    if ( !empty( $image_ids ) ) :
      // Display the images and a delete button
      $output = '';
      foreach ( $image_ids as $image_id ) {
        $image_url = wp_get_attachment_url( $image_id );
        $image_description = get_post_field( 'post_content', $image_id );
        $output .= '<img src="' . $image_url . '" style="max-width: 100%;">';
        $output .= '<p>' . $image_description . '</p>';
      }
      echo $output;
      ?>
      <form method="post" action="<?php echo admin_url( 'options-general.php?page=image-uploader' ); ?>">
        <input type="hidden" name="delete" value="<?php echo implode( ',', $image_ids ); ?>">
        <input type="submit" name="submit" value="Delete Images">
      </form>
      <?php
    endif;
    ?>
  </div>
  <?php
}

function image_uploader_shortcode( $atts ) {
  // Get the current user's image
  $image_ids = get_user_meta( get_current_user_id(), 'image', true );
  if ( empty( $image_ids ) ) {
    return 'No images have been uploaded.';
  }

  // Display the images and their descriptions
  $output = '';
  foreach ( $image_ids as $image_id ) {
    $image_url = wp_get_attachment_url( $image_id );
    $image_description = get_post_field( 'post_content', $image_id );
    $output .= '<img src="' . $image_url . '" style="max-width: 100%;">';
    $output .= '<p>' . $image_description . '</p>';
  }
  return $output;
}
add_shortcode( 'image_uploader', 'image_uploader_shortcode' );

