<?php
/**
 * Plugin Name: User Text
 * Description: A plugin that allows users to enter text and save it to their own database for display on the front end.
 * Version: 1.0
 */

function create_user_text_table() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'user_text';
    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        user_id mediumint(9) NOT NULL,
        text text NOT NULL,
        timestamp datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
        PRIMARY KEY  (id)
    ) $charset_collate;";

    require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
    dbDelta( $sql );
}






function image_uploader_display() {
  global $wpdb;
  $user_id = get_current_user_id();
  $table_name = $wpdb->prefix . 'user_images';
  
  $images = $wpdb->get_results("SELECT image_id FROM $table_name WHERE user_id = $user_id");
  
  if (!empty($images)) {
    echo '<ul>';
    foreach ($images as $image) {
      $attachment = get_post($image->image_id);
      $attachment_url = wp_get_attachment_url($image->image_id);
      $attachment_description = $attachment->post_content;
      echo '<li>' . '<img src="' . $attachment_url . '"/><p>'.$attachment_description.'</p>' . '</li>';
    }
    echo '</ul>';
  } else {
    echo 'No images have been uploaded yet.';
  }
}


register_activation_hook( __FILE__, 'create_user_text_table' );

function show_user_text_form() {
    echo '<form method="post" action="">';
    echo '<label for="user_text">Enter your text:</label>';
    echo '<input type="text" id="user_text" name="user_text" />';
    echo '<input type="submit" value="Save" />';
    echo '</form>';
}

function save_user_text() {
        if ( isset( $_POST['user_text'] ) ) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'user_text';
        $user_id = get_current_user_id();
        $text = sanitize_text_field( $_POST['user_text'] );
        $timestamp = current_time( 'mysql' );

        $wpdb->insert(
            $table_name,
            array(
                'user_id' => $user_id,
                'text' => $text,
                'timestamp' => $timestamp,
            )
        );
    }
}
add_action( 'init', 'save_user_text' );

function delete_user_text_table() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'user_text';
    $wpdb->query( "DROP TABLE IF EXISTS $table_name" );
}
register_deactivation_hook( __FILE__, 'delete_user_text_table' );
register_uninstall_hook( __FILE__, 'delete_user_text_table' );

function update_user_text_table() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'user_text';
    $installed_version = get_option( 'user_text_plugin_version' );
    if ( $installed_version !== '1.0' ) {
        // Perform update tasks
        update_option( 'user_text_plugin_version', '1.0' );
    }
}
register_activation_hook( __FILE__, 'update_user_text_table' );

function load_user_text_plugin_textdomain() {
    load_plugin_textdomain( 'user-text', false, dirname( plugin_basename( __FILE__ ) ) . '/languages' );
}
add_action( 'plugins_loaded', 'load_user_text_plugin_textdomain' );

function display_user_text() {
    if ( is_user_logged_in() ) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'user_text';
        $user_id = get_current_user_id();
        $user_text = $wpdb->get_var( $wpdb->prepare( "SELECT text FROM $table_name WHERE user_id = %d", $user_id ) );
        echo $user_text;
    }
}
add_shortcode( 'user_text', 'display_user_text' );

function image_uploader_profile_shortcode() {
    // Get the username of the current user's profile
    $user_name = get_query_var('author_name');
    // Get the user object by username
    $user = get_user_by('login', $user_name);
    // Get the user's ID
    $user_id = $user->ID;
    // Get the user's images
    $images = get_user_meta( $user_id, 'image', true );
    // Check if the user has images
    if ( !empty( $images ) ) {
        $output = '<div class="image-uploader-profile-images">';
        foreach ( $images as $image_id ) {
            $image_url = wp_get_attachment_url( $image_id );
            $image_description = get_post($image_id)->post_content;
            $output .= '<div class="image-uploader-profile-image">';
            $output .= '<img src="' . $image_url . '" alt="">';
            $output .= '<p>' . $image_description . '</p>';
            $output .= '</div>';
        }
        $output .= '</div>';
    } else {
        $output = '<p>No images have been uploaded.</p>';
    }
    return $output;
}
add_shortcode( 'image_uploader_profile', 'image_uploader_profile_shortcode' );


